services:
  user-service:
    build:
      context: userService
      dockerfile: Dockerfile
    container_name: user-service
    working_dir: /app
    volumes:
      - ./userService:/app
    ports:
      - "4243:4243"
    env_file:
      - ./userService/.env
    restart: always
    command: [ "pm2-runtime", "index.js" ]
    depends_on:
      - mysql
      - redis
      - kafka

  mail-service:
    build:
      context: mailService
      dockerfile: Dockerfile
    container_name: mail-service
    working_dir: /app
    volumes:
      - ./mailService:/app
    ports:
      - "4244:4244"
    env_file:
      - ./mailService/.env
    restart: always
    depends_on:
      - mysql
      - redis
      - kafka
      - user-service

  product-service:
    build:
      context: productService
      dockerfile: Dockerfile
    container_name: product-service
    working_dir: /app
    volumes:
      - ./productService:/app
    ports:
      - "4245:4245"
    env_file:
      - ./productService/.env
    restart: always
    depends_on:
      - mysql
      - redis
      - kafka

  mysql:
    image: mysql
    container_name: mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: qwerty123
      MYSQL_DATABASE: mysql_db
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - "8080:80"
    depends_on:
      - mysql

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami/kafka

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--timeout", "600", "--tcp-keepalive", "300" ]
    volumes:
      - redis_data:/data

volumes:
  mysql_data:
  kafka_data:
  redis_data:
